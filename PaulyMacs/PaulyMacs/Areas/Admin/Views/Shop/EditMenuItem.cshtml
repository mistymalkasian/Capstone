@model PaulyMacs.Areas.Admin.ViewModels.MenuItemViewModel

@{
    ViewBag.Title = "Edit Menu Item";
}

<br />
<br />
<br />
<br />
<br />

<h2>Edit Menu Item</h2>

<div>
    @Html.ActionLink("Back to Menu", "MenuItems")
</div>

<style>
    input#ImageName{
        display: none;
    }

</style>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        @TempData["SuccessMessage"]
    </div>
}


@using (Html.BeginForm("EditMenuItem", "Shop", FormMethod.Post, new { enctype = "multipart/form-data" } ))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.MenuItemId)

        <div class="form-group">
            <label class="control-label col-md-2" for="ItemName">Name</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ItemPrice">Price</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ItemDescription">Description</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.ItemDescription,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CategoryId">Category</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryId, Model.Categories, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="ImageName">Image Name</label>
            @Html.EditorFor(model => model.ImageName, new { htmlAttributes = new { @class = "form-control" } })
            <div class="col-md-10">
                <img src="~/Images/Uploads/MenuItems/@Model.MenuItemId/Thumbs/@Model.ImageName" />
                <br />
                <br />
                <img id="imgpreview" src="#" />
                <br />
                <br />
                <div class="col-md-10">
                    <input type="file" name="file" id="ImageUpload" />
                </div>
           </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit Item" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

@if (! Model.GalleryImages.Any())
{
    <h3>There are no gallery images for this menu item. </h3>
}
<form action="/admin/shop/SaveGalleryImages" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm">

    <div class="fallback">
        <input type="file" name="file" multiple />
        <input type="submit" value="Upload" />
    </div>
</form>

<br />
<br />

@foreach (var image in Model.GalleryImages)
{
    <div style="display: inline-block">
        <img src="~/Images/Uploads/MenuItems/@Model.MenuItemId/Gallery/Thumbs/@image" />
        @Html.ActionLink("delete", "DeleteImage", "Shop", new { @class = "deleteimage", data_name = image } )
    </div>
}
<link href="~/Scripts/dropzone/basic.css" rel="stylesheet" />
<link href="~/Scripts/dropzone/dropzone.css" rel="stylesheet" />
@section Scripts{

    <script src="~/Scripts/dropzone/dropzone.js"></script>
    <script>

        $(function () {

            //preview selected image

            function readURL(input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $("img#imgpreview")
                         .attr("src", e.target.result)
                         .width(200).height(200);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $("#ImageUpload").change(function () {
                readURL(this);
            });

            /////////////////////////////////////////////

            //dropzone.js

            Dropzone.options.dropzoneForm = {

                acceptedFiles: "image/*",
                init: function() {

                    this.on("complete", function (file) {

                        if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {

                            location.reload();
                        }
                    });

                    this.on("sending", function (file, xhr, formData) {
                        formData.append("id", @Model.MenuItemId);
                    });
                }
            };


            /////////////////////////////////////////////


        });

    </script>

}